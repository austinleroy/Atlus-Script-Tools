//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     ANTLR Version: 4.6.6
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// Generated from Compiler/Parser/MessageScriptLexer.g4 by ANTLR 4.6.6

// Unreachable code detected
#pragma warning disable 0162
// The variable '...' is assigned but its value is never used
#pragma warning disable 0219
// Missing XML comment for publicly visible type or member '...'
#pragma warning disable 1591
// Ambiguous reference in cref attribute
#pragma warning disable 419

namespace AtlusScriptLibrary.FlowScriptLanguage.Compiler.Parser {
using Antlr4.Runtime;
using Antlr4.Runtime.Atn;
using Antlr4.Runtime.Misc;
using DFA = Antlr4.Runtime.Dfa.DFA;

[System.CodeDom.Compiler.GeneratedCode("ANTLR", "4.6.6")]
[System.CLSCompliant(false)]
public partial class MessageScriptLexer : Lexer {
	public const int
		EscapeSequence=1, OpenCode=2, CloseText=3, Text=4, PlainText=5, MessageDialogTagId=6, 
		SelectionDialogTagId=7, SelectionDialogPatternId=8, CloseCode=9, OpenText=10, 
		IntLiteral=11, Identifier=12, Whitespace=13, EscapedText=14, EscapeClose=15;
	public const int MessageScriptCode = 1;
	public const int EscapeMode = 2;
	public static string[] modeNames = {
		"DEFAULT_MODE", "MessageScriptCode", "EscapeMode"
	};

	public static readonly string[] ruleNames = {
		"EscapeSequence", "OpenCode", "CloseText", "Text", "PlainText", "MessageDialogTagId", 
		"SelectionDialogTagId", "SelectionDialogPatternId", "CloseCode", "OpenText", 
		"IdentifierEscape", "IntLiteral", "Identifier", "DecIntLiteral", "HexIntLiteral", 
		"Letter", "Digit", "HexDigit", "HexLiteralPrefix", "Sign", "Whitespace", 
		"EscapedText", "EscapeClose"
	};


	public MessageScriptLexer(ICharStream input)
		: base(input)
	{
		_interp = new LexerATNSimulator(this,_ATN);
	}

	private static readonly string[] _LiteralNames = {
		null, "'\\'", null, null, null, null, null, "'sel'"
	};
	private static readonly string[] _SymbolicNames = {
		null, "EscapeSequence", "OpenCode", "CloseText", "Text", "PlainText", 
		"MessageDialogTagId", "SelectionDialogTagId", "SelectionDialogPatternId", 
		"CloseCode", "OpenText", "IntLiteral", "Identifier", "Whitespace", "EscapedText", 
		"EscapeClose"
	};
	public static readonly IVocabulary DefaultVocabulary = new Vocabulary(_LiteralNames, _SymbolicNames);

	[System.Obsolete("Use Vocabulary instead.")]
	public static readonly string[] tokenNames = GenerateTokenNames(DefaultVocabulary, _SymbolicNames.Length);

	private static string[] GenerateTokenNames(IVocabulary vocabulary, int length) {
		string[] tokenNames = new string[length];
		for (int i = 0; i < tokenNames.Length; i++) {
			tokenNames[i] = vocabulary.GetLiteralName(i);
			if (tokenNames[i] == null) {
				tokenNames[i] = vocabulary.GetSymbolicName(i);
			}

			if (tokenNames[i] == null) {
				tokenNames[i] = "<INVALID>";
			}
		}

		return tokenNames;
	}

	[System.Obsolete("Use IRecognizer.Vocabulary instead.")]
	public override string[] TokenNames
	{
		get
		{
			return tokenNames;
		}
	}

	[NotNull]
	public override IVocabulary Vocabulary
	{
		get
		{
			return DefaultVocabulary;
		}
	}

	public override string GrammarFileName { get { return "MessageScriptLexer.g4"; } }

	public override string[] RuleNames { get { return ruleNames; } }

	public override string[] ModeNames { get { return modeNames; } }

	public override string SerializedAtn { get { return _serializedATN; } }

	public static readonly string _serializedATN =
		"\x3\xAF6F\x8320\x479D\xB75C\x4880\x1605\x191C\xAB37\x2\x11\xB0\b\x1\b"+
		"\x1\b\x1\x4\x2\t\x2\x4\x3\t\x3\x4\x4\t\x4\x4\x5\t\x5\x4\x6\t\x6\x4\a\t"+
		"\a\x4\b\t\b\x4\t\t\t\x4\n\t\n\x4\v\t\v\x4\f\t\f\x4\r\t\r\x4\xE\t\xE\x4"+
		"\xF\t\xF\x4\x10\t\x10\x4\x11\t\x11\x4\x12\t\x12\x4\x13\t\x13\x4\x14\t"+
		"\x14\x4\x15\t\x15\x4\x16\t\x16\x4\x17\t\x17\x4\x18\t\x18\x3\x2\x3\x2\x3"+
		"\x2\x3\x2\x3\x3\x3\x3\x3\x3\x3\x3\x3\x4\x3\x4\x3\x4\x3\x4\x3\x5\x3\x5"+
		"\x5\x5\x42\n\x5\x3\x6\x6\x6\x45\n\x6\r\x6\xE\x6\x46\x3\a\x3\a\x3\a\x3"+
		"\a\x3\a\x3\a\x5\aO\n\a\x3\b\x3\b\x3\b\x3\b\x3\t\x3\t\x3\t\x3\t\x3\t\x3"+
		"\t\x3\t\x3\t\x3\t\x5\t^\n\t\x3\n\x3\n\x3\n\x3\n\x3\v\x3\v\x3\v\x3\v\x3"+
		"\f\x3\f\x3\f\x3\r\x3\r\x5\rm\n\r\x3\xE\x3\xE\x5\xEq\n\xE\x3\xE\x3\xE\x3"+
		"\xE\a\xEv\n\xE\f\xE\xE\xEy\v\xE\x3\xE\x3\xE\a\xE}\n\xE\f\xE\xE\xE\x80"+
		"\v\xE\x3\xE\x3\xE\x5\xE\x84\n\xE\x3\xF\x5\xF\x87\n\xF\x3\xF\x6\xF\x8A"+
		"\n\xF\r\xF\xE\xF\x8B\x3\x10\x5\x10\x8F\n\x10\x3\x10\x3\x10\x6\x10\x93"+
		"\n\x10\r\x10\xE\x10\x94\x3\x11\x3\x11\x3\x12\x3\x12\x3\x13\x3\x13\x5\x13"+
		"\x9D\n\x13\x3\x14\x3\x14\x3\x14\x3\x15\x3\x15\x3\x16\x3\x16\x3\x16\x3"+
		"\x16\x3\x17\x6\x17\xA9\n\x17\r\x17\xE\x17\xAA\x3\x18\x3\x18\x3\x18\x3"+
		"\x18\x2\x2\x2\x19\x5\x2\x3\a\x2\x4\t\x2\x5\v\x2\x6\r\x2\a\xF\x2\b\x11"+
		"\x2\t\x13\x2\n\x15\x2\v\x17\x2\f\x19\x2\x2\x1B\x2\r\x1D\x2\xE\x1F\x2\x2"+
		"!\x2\x2#\x2\x2%\x2\x2\'\x2\x2)\x2\x2+\x2\x2-\x2\xF/\x2\x10\x31\x2\x11"+
		"\x5\x2\x3\x4\n\x4\x2]]__\x3\x2\x62\x62\x4\x2\x43\\\x63|\x3\x2\x32;\x4"+
		"\x2\x43H\x63h\x4\x2ZZzz\x4\x2--//\x5\x2\v\f\xF\xF\"\"\xB6\x2\x5\x3\x2"+
		"\x2\x2\x2\a\x3\x2\x2\x2\x2\t\x3\x2\x2\x2\x2\v\x3\x2\x2\x2\x2\r\x3\x2\x2"+
		"\x2\x3\xF\x3\x2\x2\x2\x3\x11\x3\x2\x2\x2\x3\x13\x3\x2\x2\x2\x3\x15\x3"+
		"\x2\x2\x2\x3\x17\x3\x2\x2\x2\x3\x1B\x3\x2\x2\x2\x3\x1D\x3\x2\x2\x2\x3"+
		"-\x3\x2\x2\x2\x4/\x3\x2\x2\x2\x4\x31\x3\x2\x2\x2\x5\x33\x3\x2\x2\x2\a"+
		"\x37\x3\x2\x2\x2\t;\x3\x2\x2\x2\v\x41\x3\x2\x2\x2\r\x44\x3\x2\x2\x2\xF"+
		"N\x3\x2\x2\x2\x11P\x3\x2\x2\x2\x13]\x3\x2\x2\x2\x15_\x3\x2\x2\x2\x17\x63"+
		"\x3\x2\x2\x2\x19g\x3\x2\x2\x2\x1Bl\x3\x2\x2\x2\x1D\x83\x3\x2\x2\x2\x1F"+
		"\x86\x3\x2\x2\x2!\x8E\x3\x2\x2\x2#\x96\x3\x2\x2\x2%\x98\x3\x2\x2\x2\'"+
		"\x9C\x3\x2\x2\x2)\x9E\x3\x2\x2\x2+\xA1\x3\x2\x2\x2-\xA3\x3\x2\x2\x2/\xA8"+
		"\x3\x2\x2\x2\x31\xAC\x3\x2\x2\x2\x33\x34\a^\x2\x2\x34\x35\x3\x2\x2\x2"+
		"\x35\x36\b\x2\x2\x2\x36\x6\x3\x2\x2\x2\x37\x38\a]\x2\x2\x38\x39\x3\x2"+
		"\x2\x2\x39:\b\x3\x3\x2:\b\x3\x2\x2\x2;<\a_\x2\x2<=\x3\x2\x2\x2=>\b\x4"+
		"\x3\x2>\n\x3\x2\x2\x2?\x42\x5\r\x6\x2@\x42\x5/\x17\x2\x41?\x3\x2\x2\x2"+
		"\x41@\x3\x2\x2\x2\x42\f\x3\x2\x2\x2\x43\x45\n\x2\x2\x2\x44\x43\x3\x2\x2"+
		"\x2\x45\x46\x3\x2\x2\x2\x46\x44\x3\x2\x2\x2\x46G\x3\x2\x2\x2G\xE\x3\x2"+
		"\x2\x2HI\ao\x2\x2IJ\au\x2\x2JO\ai\x2\x2KL\a\x66\x2\x2LM\an\x2\x2MO\ai"+
		"\x2\x2NH\x3\x2\x2\x2NK\x3\x2\x2\x2O\x10\x3\x2\x2\x2PQ\au\x2\x2QR\ag\x2"+
		"\x2RS\an\x2\x2S\x12\x3\x2\x2\x2TU\av\x2\x2UV\aq\x2\x2V^\ar\x2\x2WX\a\x64"+
		"\x2\x2XY\aq\x2\x2YZ\av\x2\x2Z[\av\x2\x2[\\\aq\x2\x2\\^\ao\x2\x2]T\x3\x2"+
		"\x2\x2]W\x3\x2\x2\x2^\x14\x3\x2\x2\x2_`\a_\x2\x2`\x61\x3\x2\x2\x2\x61"+
		"\x62\b\n\x4\x2\x62\x16\x3\x2\x2\x2\x63\x64\a]\x2\x2\x64\x65\x3\x2\x2\x2"+
		"\x65\x66\b\v\x4\x2\x66\x18\x3\x2\x2\x2gh\a\x62\x2\x2hi\a\x62\x2\x2i\x1A"+
		"\x3\x2\x2\x2jm\x5\x1F\xF\x2km\x5!\x10\x2lj\x3\x2\x2\x2lk\x3\x2\x2\x2m"+
		"\x1C\x3\x2\x2\x2nq\x5#\x11\x2oq\a\x61\x2\x2pn\x3\x2\x2\x2po\x3\x2\x2\x2"+
		"qw\x3\x2\x2\x2rv\x5#\x11\x2sv\a\x61\x2\x2tv\x5%\x12\x2ur\x3\x2\x2\x2u"+
		"s\x3\x2\x2\x2ut\x3\x2\x2\x2vy\x3\x2\x2\x2wu\x3\x2\x2\x2wx\x3\x2\x2\x2"+
		"x\x84\x3\x2\x2\x2yw\x3\x2\x2\x2z~\x5\x19\f\x2{}\n\x3\x2\x2|{\x3\x2\x2"+
		"\x2}\x80\x3\x2\x2\x2~|\x3\x2\x2\x2~\x7F\x3\x2\x2\x2\x7F\x81\x3\x2\x2\x2"+
		"\x80~\x3\x2\x2\x2\x81\x82\x5\x19\f\x2\x82\x84\x3\x2\x2\x2\x83p\x3\x2\x2"+
		"\x2\x83z\x3\x2\x2\x2\x84\x1E\x3\x2\x2\x2\x85\x87\x5+\x15\x2\x86\x85\x3"+
		"\x2\x2\x2\x86\x87\x3\x2\x2\x2\x87\x89\x3\x2\x2\x2\x88\x8A\x5%\x12\x2\x89"+
		"\x88\x3\x2\x2\x2\x8A\x8B\x3\x2\x2\x2\x8B\x89\x3\x2\x2\x2\x8B\x8C\x3\x2"+
		"\x2\x2\x8C \x3\x2\x2\x2\x8D\x8F\x5+\x15\x2\x8E\x8D\x3\x2\x2\x2\x8E\x8F"+
		"\x3\x2\x2\x2\x8F\x90\x3\x2\x2\x2\x90\x92\x5)\x14\x2\x91\x93\x5\'\x13\x2"+
		"\x92\x91\x3\x2\x2\x2\x93\x94\x3\x2\x2\x2\x94\x92\x3\x2\x2\x2\x94\x95\x3"+
		"\x2\x2\x2\x95\"\x3\x2\x2\x2\x96\x97\t\x4\x2\x2\x97$\x3\x2\x2\x2\x98\x99"+
		"\t\x5\x2\x2\x99&\x3\x2\x2\x2\x9A\x9D\x5%\x12\x2\x9B\x9D\t\x6\x2\x2\x9C"+
		"\x9A\x3\x2\x2\x2\x9C\x9B\x3\x2\x2\x2\x9D(\x3\x2\x2\x2\x9E\x9F\a\x32\x2"+
		"\x2\x9F\xA0\t\a\x2\x2\xA0*\x3\x2\x2\x2\xA1\xA2\t\b\x2\x2\xA2,\x3\x2\x2"+
		"\x2\xA3\xA4\t\t\x2\x2\xA4\xA5\x3\x2\x2\x2\xA5\xA6\b\x16\x5\x2\xA6.\x3"+
		"\x2\x2\x2\xA7\xA9\n\t\x2\x2\xA8\xA7\x3\x2\x2\x2\xA9\xAA\x3\x2\x2\x2\xAA"+
		"\xA8\x3\x2\x2\x2\xAA\xAB\x3\x2\x2\x2\xAB\x30\x3\x2\x2\x2\xAC\xAD\t\t\x2"+
		"\x2\xAD\xAE\x3\x2\x2\x2\xAE\xAF\b\x18\x4\x2\xAF\x32\x3\x2\x2\x2\x15\x2"+
		"\x3\x4\x41\x46N]lpuw~\x83\x86\x8B\x8E\x94\x9C\xAA\x6\a\x4\x2\a\x3\x2\x6"+
		"\x2\x2\b\x2\x2";
	public static readonly ATN _ATN =
		new ATNDeserializer().Deserialize(_serializedATN.ToCharArray());
}
} // namespace AtlusScriptLibrary.FlowScriptLanguage.Compiler.Parser
