//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     ANTLR Version: 4.6.6
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// Generated from Compiler/Parser/MessageScriptLexer.g4 by ANTLR 4.6.6

// Unreachable code detected
#pragma warning disable 0162
// The variable '...' is assigned but its value is never used
#pragma warning disable 0219
// Missing XML comment for publicly visible type or member '...'
#pragma warning disable 1591
// Ambiguous reference in cref attribute
#pragma warning disable 419

namespace AtlusScriptLibrary.FlowScriptLanguage.Compiler.Parser {
using Antlr4.Runtime;
using Antlr4.Runtime.Atn;
using Antlr4.Runtime.Misc;
using DFA = Antlr4.Runtime.Dfa.DFA;

[System.CodeDom.Compiler.GeneratedCode("ANTLR", "4.6.6")]
[System.CLSCompliant(false)]
public partial class MessageScriptLexer : Lexer {
	public const int
		OpenCode=1, CloseText=2, Text=3, MessageDialogTagId=4, SelectionDialogTagId=5, 
		SelectionDialogPatternId=6, CloseCode=7, OpenText=8, IntLiteral=9, Identifier=10, 
		Whitespace=11;
	public const int MessageScriptCode = 1;
	public static string[] modeNames = {
		"DEFAULT_MODE", "MessageScriptCode"
	};

	public static readonly string[] ruleNames = {
		"OpenCode", "CloseText", "Text", "MessageDialogTagId", "SelectionDialogTagId", 
		"SelectionDialogPatternId", "CloseCode", "OpenText", "IdentifierEscape", 
		"IntLiteral", "Identifier", "DecIntLiteral", "HexIntLiteral", "Letter", 
		"Digit", "HexDigit", "HexLiteralPrefix", "Sign", "Whitespace"
	};


	public MessageScriptLexer(ICharStream input)
		: base(input)
	{
		_interp = new LexerATNSimulator(this,_ATN);
	}

	private static readonly string[] _LiteralNames = {
		null, null, null, null, null, "'sel'"
	};
	private static readonly string[] _SymbolicNames = {
		null, "OpenCode", "CloseText", "Text", "MessageDialogTagId", "SelectionDialogTagId", 
		"SelectionDialogPatternId", "CloseCode", "OpenText", "IntLiteral", "Identifier", 
		"Whitespace"
	};
	public static readonly IVocabulary DefaultVocabulary = new Vocabulary(_LiteralNames, _SymbolicNames);

	[System.Obsolete("Use Vocabulary instead.")]
	public static readonly string[] tokenNames = GenerateTokenNames(DefaultVocabulary, _SymbolicNames.Length);

	private static string[] GenerateTokenNames(IVocabulary vocabulary, int length) {
		string[] tokenNames = new string[length];
		for (int i = 0; i < tokenNames.Length; i++) {
			tokenNames[i] = vocabulary.GetLiteralName(i);
			if (tokenNames[i] == null) {
				tokenNames[i] = vocabulary.GetSymbolicName(i);
			}

			if (tokenNames[i] == null) {
				tokenNames[i] = "<INVALID>";
			}
		}

		return tokenNames;
	}

	[System.Obsolete("Use IRecognizer.Vocabulary instead.")]
	public override string[] TokenNames
	{
		get
		{
			return tokenNames;
		}
	}

	[NotNull]
	public override IVocabulary Vocabulary
	{
		get
		{
			return DefaultVocabulary;
		}
	}

	public override string GrammarFileName { get { return "MessageScriptLexer.g4"; } }

	public override string[] RuleNames { get { return ruleNames; } }

	public override string[] ModeNames { get { return modeNames; } }

	public override string SerializedAtn { get { return _serializedATN; } }

	public static readonly string _serializedATN =
		"\x3\xAF6F\x8320\x479D\xB75C\x4880\x1605\x191C\xAB37\x2\r\x9A\b\x1\b\x1"+
		"\x4\x2\t\x2\x4\x3\t\x3\x4\x4\t\x4\x4\x5\t\x5\x4\x6\t\x6\x4\a\t\a\x4\b"+
		"\t\b\x4\t\t\t\x4\n\t\n\x4\v\t\v\x4\f\t\f\x4\r\t\r\x4\xE\t\xE\x4\xF\t\xF"+
		"\x4\x10\t\x10\x4\x11\t\x11\x4\x12\t\x12\x4\x13\t\x13\x4\x14\t\x14\x3\x2"+
		"\x3\x2\x3\x2\x3\x2\x3\x3\x3\x3\x3\x3\x3\x3\x3\x4\x3\x4\x3\x4\x3\x4\x3"+
		"\x4\x6\x4\x38\n\x4\r\x4\xE\x4\x39\x3\x5\x3\x5\x3\x5\x3\x5\x3\x5\x3\x5"+
		"\x5\x5\x42\n\x5\x3\x6\x3\x6\x3\x6\x3\x6\x3\a\x3\a\x3\a\x3\a\x3\a\x3\a"+
		"\x3\a\x3\a\x3\a\x5\aQ\n\a\x3\b\x3\b\x3\b\x3\b\x3\t\x3\t\x3\t\x3\t\x3\n"+
		"\x3\n\x3\n\x3\v\x3\v\x5\v`\n\v\x3\f\x3\f\x5\f\x64\n\f\x3\f\x3\f\x3\f\a"+
		"\fi\n\f\f\f\xE\fl\v\f\x3\f\x3\f\a\fp\n\f\f\f\xE\fs\v\f\x3\f\x3\f\x5\f"+
		"w\n\f\x3\r\x5\rz\n\r\x3\r\x6\r}\n\r\r\r\xE\r~\x3\xE\x5\xE\x82\n\xE\x3"+
		"\xE\x3\xE\x6\xE\x86\n\xE\r\xE\xE\xE\x87\x3\xF\x3\xF\x3\x10\x3\x10\x3\x11"+
		"\x3\x11\x5\x11\x90\n\x11\x3\x12\x3\x12\x3\x12\x3\x13\x3\x13\x3\x14\x3"+
		"\x14\x3\x14\x3\x14\x2\x2\x2\x15\x4\x2\x3\x6\x2\x4\b\x2\x5\n\x2\x6\f\x2"+
		"\a\xE\x2\b\x10\x2\t\x12\x2\n\x14\x2\x2\x16\x2\v\x18\x2\f\x1A\x2\x2\x1C"+
		"\x2\x2\x1E\x2\x2 \x2\x2\"\x2\x2$\x2\x2&\x2\x2(\x2\r\x4\x2\x3\n\x4\x2]"+
		"]__\x3\x2\x62\x62\x4\x2\x43\\\x63|\x3\x2\x32;\x4\x2\x43H\x63h\x4\x2ZZ"+
		"zz\x4\x2--//\x5\x2\v\f\xF\xF\"\"\xA1\x2\x4\x3\x2\x2\x2\x2\x6\x3\x2\x2"+
		"\x2\x2\b\x3\x2\x2\x2\x3\n\x3\x2\x2\x2\x3\f\x3\x2\x2\x2\x3\xE\x3\x2\x2"+
		"\x2\x3\x10\x3\x2\x2\x2\x3\x12\x3\x2\x2\x2\x3\x16\x3\x2\x2\x2\x3\x18\x3"+
		"\x2\x2\x2\x3(\x3\x2\x2\x2\x4*\x3\x2\x2\x2\x6.\x3\x2\x2\x2\b\x37\x3\x2"+
		"\x2\x2\n\x41\x3\x2\x2\x2\f\x43\x3\x2\x2\x2\xEP\x3\x2\x2\x2\x10R\x3\x2"+
		"\x2\x2\x12V\x3\x2\x2\x2\x14Z\x3\x2\x2\x2\x16_\x3\x2\x2\x2\x18v\x3\x2\x2"+
		"\x2\x1Ay\x3\x2\x2\x2\x1C\x81\x3\x2\x2\x2\x1E\x89\x3\x2\x2\x2 \x8B\x3\x2"+
		"\x2\x2\"\x8F\x3\x2\x2\x2$\x91\x3\x2\x2\x2&\x94\x3\x2\x2\x2(\x96\x3\x2"+
		"\x2\x2*+\a]\x2\x2+,\x3\x2\x2\x2,-\b\x2\x2\x2-\x5\x3\x2\x2\x2./\a_\x2\x2"+
		"/\x30\x3\x2\x2\x2\x30\x31\b\x3\x2\x2\x31\a\x3\x2\x2\x2\x32\x33\a^\x2\x2"+
		"\x33\x38\a]\x2\x2\x34\x35\a^\x2\x2\x35\x38\a_\x2\x2\x36\x38\n\x2\x2\x2"+
		"\x37\x32\x3\x2\x2\x2\x37\x34\x3\x2\x2\x2\x37\x36\x3\x2\x2\x2\x38\x39\x3"+
		"\x2\x2\x2\x39\x37\x3\x2\x2\x2\x39:\x3\x2\x2\x2:\t\x3\x2\x2\x2;<\ao\x2"+
		"\x2<=\au\x2\x2=\x42\ai\x2\x2>?\a\x66\x2\x2?@\an\x2\x2@\x42\ai\x2\x2\x41"+
		";\x3\x2\x2\x2\x41>\x3\x2\x2\x2\x42\v\x3\x2\x2\x2\x43\x44\au\x2\x2\x44"+
		"\x45\ag\x2\x2\x45\x46\an\x2\x2\x46\r\x3\x2\x2\x2GH\av\x2\x2HI\aq\x2\x2"+
		"IQ\ar\x2\x2JK\a\x64\x2\x2KL\aq\x2\x2LM\av\x2\x2MN\av\x2\x2NO\aq\x2\x2"+
		"OQ\ao\x2\x2PG\x3\x2\x2\x2PJ\x3\x2\x2\x2Q\xF\x3\x2\x2\x2RS\a_\x2\x2ST\x3"+
		"\x2\x2\x2TU\b\b\x3\x2U\x11\x3\x2\x2\x2VW\a]\x2\x2WX\x3\x2\x2\x2XY\b\t"+
		"\x3\x2Y\x13\x3\x2\x2\x2Z[\a\x62\x2\x2[\\\a\x62\x2\x2\\\x15\x3\x2\x2\x2"+
		"]`\x5\x1A\r\x2^`\x5\x1C\xE\x2_]\x3\x2\x2\x2_^\x3\x2\x2\x2`\x17\x3\x2\x2"+
		"\x2\x61\x64\x5\x1E\xF\x2\x62\x64\a\x61\x2\x2\x63\x61\x3\x2\x2\x2\x63\x62"+
		"\x3\x2\x2\x2\x64j\x3\x2\x2\x2\x65i\x5\x1E\xF\x2\x66i\a\x61\x2\x2gi\x5"+
		" \x10\x2h\x65\x3\x2\x2\x2h\x66\x3\x2\x2\x2hg\x3\x2\x2\x2il\x3\x2\x2\x2"+
		"jh\x3\x2\x2\x2jk\x3\x2\x2\x2kw\x3\x2\x2\x2lj\x3\x2\x2\x2mq\x5\x14\n\x2"+
		"np\n\x3\x2\x2on\x3\x2\x2\x2ps\x3\x2\x2\x2qo\x3\x2\x2\x2qr\x3\x2\x2\x2"+
		"rt\x3\x2\x2\x2sq\x3\x2\x2\x2tu\x5\x14\n\x2uw\x3\x2\x2\x2v\x63\x3\x2\x2"+
		"\x2vm\x3\x2\x2\x2w\x19\x3\x2\x2\x2xz\x5&\x13\x2yx\x3\x2\x2\x2yz\x3\x2"+
		"\x2\x2z|\x3\x2\x2\x2{}\x5 \x10\x2|{\x3\x2\x2\x2}~\x3\x2\x2\x2~|\x3\x2"+
		"\x2\x2~\x7F\x3\x2\x2\x2\x7F\x1B\x3\x2\x2\x2\x80\x82\x5&\x13\x2\x81\x80"+
		"\x3\x2\x2\x2\x81\x82\x3\x2\x2\x2\x82\x83\x3\x2\x2\x2\x83\x85\x5$\x12\x2"+
		"\x84\x86\x5\"\x11\x2\x85\x84\x3\x2\x2\x2\x86\x87\x3\x2\x2\x2\x87\x85\x3"+
		"\x2\x2\x2\x87\x88\x3\x2\x2\x2\x88\x1D\x3\x2\x2\x2\x89\x8A\t\x4\x2\x2\x8A"+
		"\x1F\x3\x2\x2\x2\x8B\x8C\t\x5\x2\x2\x8C!\x3\x2\x2\x2\x8D\x90\x5 \x10\x2"+
		"\x8E\x90\t\x6\x2\x2\x8F\x8D\x3\x2\x2\x2\x8F\x8E\x3\x2\x2\x2\x90#\x3\x2"+
		"\x2\x2\x91\x92\a\x32\x2\x2\x92\x93\t\a\x2\x2\x93%\x3\x2\x2\x2\x94\x95"+
		"\t\b\x2\x2\x95\'\x3\x2\x2\x2\x96\x97\t\t\x2\x2\x97\x98\x3\x2\x2\x2\x98"+
		"\x99\b\x14\x4\x2\x99)\x3\x2\x2\x2\x13\x2\x3\x37\x39\x41P_\x63hjqvy~\x81"+
		"\x87\x8F\x5\a\x3\x2\x6\x2\x2\b\x2\x2";
	public static readonly ATN _ATN =
		new ATNDeserializer().Deserialize(_serializedATN.ToCharArray());
}
} // namespace AtlusScriptLibrary.FlowScriptLanguage.Compiler.Parser
